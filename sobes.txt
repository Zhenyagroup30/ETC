
1. Отличие REST от SOAP

REST (Representational State Transfer) — на самом деле архитектурный стиль, а не протокол.

REST не использует конвертацию данных при передаче, данные передаются в исходном виде — это снижает нагрузку на клиент веб-сервиса, но увеличивает нагрузку на сеть. Управление данными происходит с помощью методов HTTP:
- GET — получить данные;
- POST — добавить данные;
- PUT — изменить данные;
- DELETE — удалить данные.
 
SOAP - формат обмена сообщениями.


2. Отличие XML и JSON

XML - это язык разметки подобный HTML

JSON — это популярный формат текстовых данных, который используется для обмена данными в современных веб - и мобильных приложениях. 

3. Статус коды http запросов

100: информационные коды, указывающие, что запрос, инициированный браузером, продолжается
200: коды успешного запроса
300: коды перенаправления возвращаются, когда запрошенный ресурс заменен новым
400: http-ошибки, возникающие на стороне клиента и указывающие на наличие проблемы с запросом
500: коды ошибок сервера, указывающие, что запрос был принят, но ошибка на сервере не позволила выполнить его


4. Опыт работы со сниферами

посмотреть про это

фиддлер - универсальность, поддержка мак ос и винды, удобный в пользовании. (тестирование с подменой данных)

чарльз - функция брэк поинт, вфидлере нету, вот в том например их отличия.

5. Отличие Srum и Kanban

Scrum:
daily miting 
stand up 
retrospective
sprint
backlog


6. Багтрекинговые системы

jira (посмотреть)


7. Эстимации 
- Story points
- Planning poker


8. Длительность спринтов и релизы

от 1 недели до 4 недель (среднее 2 недели )

9 Техники тест дизайна

- Эквивалентное разбиение
- Анализ граничных значений
- Попарное тестирование
- Тестирование состояний и переходов
- Таблица принятия решений

10. Отличие северити от приорити

Сиверити (Серьезность) - Влияние дефекта на работоспособность приложения. (В основном проставляется тестером)

Прайорити (Приоритет) - на сколько срочно должно произойти выполнения задачи или устранения дефекта. (Проставляется руководителем или менеджером проекта)

Пример:

Название продукта указано не правильно, Низкий сиверити, но ОЧЕНЬ высокий прайорити.

11. Отличие ретестинга от регр ессии

Ре-тест: проверяем конкретный баг, который был пофкшени разработчиком.

Регрессионные тесты:  Проводятся тогда, когда были внесены изменения в проект и нам нужно убедиться что новые (добавленные) функции приложения не сломали уже существующую функциональность, работавшую и протестированную ранее.

12. Что делать если нужно пройти регрессию а времени нет?

1. Попытаться через тим лида увеличить время на тест, если такой возможности нету то:
2. Иду к прогерам, узнаю в каких "локах" приложения она делил изменения и проверяю только их


13. Функционально и нефункциональное тестирование

1. Функциональное тестирование проверяте работоспособность ОСНОВНЫХ функций приложения.
2. Не функциональное это проиводительность и удободство использования (юзабилити, установочное тестирование, производительности)

12. SQL запрос

Select/join ... etc

13. БД по моделям данных


посмотреть про БД

1. Реляционные
2. Сетевые
3. Иерархические
4. Сетевые
5. Обьекто-ориентированные

14. Типы связей в БД

- Один к одному
- Один ко многим
- Многие ко многим
- Один ко многим


15. Эмулятор/симулятор 

Эмулятор - можем изменять настройки батареи, сети, железа

Симулатор - только запускаем приложение

16. На чем тестить реальное устройство или симулятор?

Конечно же лучше реальное устройство, потому что,баги воспроизводимые в симуляторах, не всегда воспроизводяться на реальных устройствах и наоборот.


17. Версии ОС на мобилках

версии актуальные на сегодня
андроид 12
иос 15...4/5


18. Снятие логов с мобильного устройства

через андроид студио
и через Х-код

запускаем билд, смотрим консоль, там отображаются логи.

19. Специфические тестирования мобильных устройств

Проверки сети, поп ап, пуши,абдейт билда (приходит ли апдейт юзеру)